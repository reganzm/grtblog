spring:
  application:
    name: grtblog-backend
  data:
    mongodb:
      uri: mongodb://172.20.0.4:27017/grtblog
  datasource:
    url: jdbc:mysql://172.20.0.3:3306/grtblog?serverTimezone=GMT%2B8&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: user
    password: password
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
      location: /root/blog/
  mvc:
    static-path-pattern: /uploads/**
  web:
    resources:
      static-locations: file:/root/blog/
  mail:
    host: smtp.feishu.cn
    port: 587
    username: msg@itodoit.com
    password: ZxMiFoulUHvcol3n
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
      mail.smtp.starttls.required: true
    default-encoding: UTF-8
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 771501593369-5uuoko1kokogvfsu8hgpedrbe94fl80n.apps.googleusercontent.com
            client-secret: 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
            scope: profile, email
            redirect-uri: "http://127.0.0.1:8080/login/oauth2/code/google"
            client-name: Google
          github:
            client-id: Ov23lizpL2clUapS5WzB
            client-secret: af210e176ae3b91ce7e7852c7a9b0b5f9b8afbe1
            redirect-uri: "https://www.itodoit.com:8080/login/oauth2/code/github"
            scope: user:email
            client-name: Github
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
            user-name-attribute: id
    elasticsearch:
      uris: http://localhost:9200
      username:
      password:
#  mvc:
#    servlet:
#      path: /api/v1

# mybatis-plus configuration
mybatis-plus:
  global-config:
    sequence:
      datacenter-id: 1
      worker-id: 1
    db-config:
      id-type: assign_id
  mapper-locations: classpath:mapper/*.xml

# enable log for web request (develop only)
logging:
  #   level:
  #     org:
  #       springframework:
  #         web: DEBUG
  config: classpath:logback-spring.xml

# use at "In extreme cases, the primary key is duplicated."
snowflake:
  data-center-id: 1
  machine-id: 1

com:
  grtsinry43:
    secret_key:  akZh8sfrG5Jgg1ZHh2oa9UwzB3zoo9AZ6XOCndK0VNeo/goVdF4cOKZ9EaO9ud5+Qv/mqM4xVc5KngARSlLheQ==       # 这里使用 `openssl rand -base64 64` 生成一个随机字符串用作密钥
    deepseek-api-key: sk-a6dc3032294841cba582f0350be4bd21
    github:
      clientId: your_client_id
      clientSecret: your_client_secret
      redirectUri: https://your_deploy_site/api/v1/login/oauth2/code/github
    meilisearch:
      url: http://172.20.0.6:7700
      apiKey: masterKey

recommender:
  service:
    url: http://172.20.0.7:8001